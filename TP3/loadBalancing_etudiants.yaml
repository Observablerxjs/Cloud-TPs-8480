heat_template_version: 2014-10-16

description: A template to deploy a load balanced web server

parameters:

  image:
    type: string
    description: Image utilisee pour les serveurs
    default: INF4410-Ubuntu-trusty-mini
    constraints:
      - custom_constraint: glance.image

  key_name:
    type: string
    label: Key Name
    default: INF8480-TP3
    description: Name of key-pair to be used for compute instance

  instanceNumbers:
    type: number
    label: Instance numbers
    description: Instance numbers to create
    default: 2

  flavor:
    type: string
    description: Flavor utilisee par les serveurs
    default: INF4410-mini
    constraints:
      - custom_constraint: nova.flavor

  subnet_id:
    type: string
    description: Sous-reseau dans lequel le load balancer sera situe
    default: 6579eb07-88c3-4707-9c6e-ab90a78cca02
    constraints:
      - custom_constraint: neutron.subnet

  network_id:
    type: string
    label: Network ID
    description: SCONETWORK Network to be used for the compute instance
    default: inf4410-net
    constraints:
      - custom_constraint: neutron.network

  external_network_id:
    type: string
    description: UUID of a Neutron external network
    default: 0c3b1354-d3d5-4fec-86d3-19d4d1f13785
    constraints:
      - custom_constraint: neutron.network

    # Vous pouvez ajouter d'autres paramètres
    # Il faut bien définir les descriptions, les valeurs par default et les contraintes

resources:

  server_nodes:
      type: OS::Heat::ResourceGroup
      properties:
        count: { get_param: instanceNumbers }
        resource_def:
            type: https://raw.githubusercontent.com/Observablerxjs/TP3_8480/master/balancedServer.yaml
            properties:
              name: serverLB_%index%
              image_id: { get_param: image }
              flavor: { get_param: flavor }
              key_name: { get_param: key_name }
              network_id: { get_param: network_id }
              pool_id: { get_resource: mypool }
              user_data: |
                #!/bin/bash
                wget "https://raw.githubusercontent.com/houssemmh/INF4410-TP3/master/server.py"
                python server.py

  mymonitor:
      type: OS::Neutron::HealthMonitor
      properties:
        type: TCP
        delay: 15
        max_retries: 2
        timeout: 5

  mypool:
      type: OS::Neutron::Pool
      properties:
        lb_method: ROUND_ROBIN
        monitors: [{get_resource: mymonitor}]
        protocol: HTTP
        subnet_id: { get_param: subnet_id }
        vip: 
          protocol_port: 8080

  myloadbalancer:
      type: OS::Neutron::LoadBalancer
      properties:
        protocol_port: 8080
        pool_id: {get_resource: mypool}

  lb_floating:
      type: OS::Neutron::FloatingIP
      properties:
        floating_network_id: {get_param: external_network_id}
        port_id: {get_attr: [mypool, vip, port_id]}

outputs:
  pool_ip_address:
    value: { get_attr: [mypool, vip, networks] }
    description: The IP address of the load balancing pool
